{"version":3,"sources":["ProductList.tsx","App.tsx","index.tsx"],"names":["ProductList","props","subscription","getProducts","unsubscribe","graphQlQuery","skip","take","stream","subscribe","val","setState","products","items","err","console","error","log","toggleEnabled","id","enabled","graphQlMutation","then","notify","message","state","this","Fragment","className","onClick","length","map","product","key","name","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"gQAIaA,EAAb,YAGI,WAAYC,GAAa,IAAD,8BACpB,4CAAMA,KAHVC,kBAEwB,IAKxBC,YAAc,WACN,EAAKD,cACL,EAAKA,aAAaE,cAEtB,EAAKF,aAAeG,uBAAa,yQAOxB,CACLC,KAAM,EACNC,KAAM,KACPC,OAAOC,WAAU,SAACC,GACb,EAAKC,SAAS,CAACC,SAAUF,EAAIE,SAASC,WAE1C,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,MACrB,kBAAMC,QAAQE,IAAI,iCAvBF,EA2BxBC,cAAgB,SAACC,EAAYC,GASzBC,0BARc,gSAQY,CAACF,KAAIC,YAAUE,MAAK,SAAAZ,GAC1Ca,iBAAO,CACHC,QAAS,wBApCjB,EAAKC,MAAQ,CAACb,SAAU,IAFJ,EAH5B,oFA+CYc,KAAKxB,cACLwB,KAAKxB,aAAaE,gBAhD9B,+BAoDc,IAAD,OACL,OAAO,kBAAC,IAAMuB,SAAP,KACH,4BAAQC,UAAU,kBAAkBC,QAASH,KAAKvB,aAAlD,gBAEIuB,KAAKD,MAAMb,SAASkB,OAAS,wCAAoB,GAErD,wBAAIF,UAAU,gBACTF,KAAKD,MAAMb,SAASmB,KAAI,SAAAC,GAAO,OAAI,wBAAIC,IAAKD,EAAQb,IAChDa,EAAQE,KACRF,EAAQZ,QAAU,0BAAMQ,UAAU,uBAAhB,WACf,0BAAMA,UAAU,sBAAhB,YACJ,4BACIA,UAAU,2BACVC,QAAS,kBAAM,EAAKX,cAAcc,EAAQb,IAAKa,EAAQZ,WAF3D,oBA/DpB,GAAiCe,IAAMC,WCaxBC,MAZf,WACI,OACI,yBAAKT,UAAU,OACX,iDACA,8LAGA,kBAAC,EAAD,QCPZU,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.cb4b3048.chunk.js","sourcesContent":["import React from \"react\";\nimport { graphQlMutation, graphQlQuery, notify } from '@vendure/ui-devkit';\nimport { Subscription } from 'rxjs';\n\nexport class ProductList extends React.Component<{}, { products: any[] }> {\n    subscription?: Subscription;\n\n    constructor(props: any) {\n        super(props);\n        this.state = {products: []};\n    }\n\n    getProducts = () => {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n        this.subscription = graphQlQuery(`\n             query GetProducts($skip: Int, $take: Int) {\n                 products(options: { skip: $skip, take: $take }) {\n                     items { id, name, enabled },\n                     totalItems\n                 }\n             }\n              `, {\n            skip: 0,\n            take: 10,\n        }).stream.subscribe((val: any) => {\n                this.setState({products: val.products.items});\n            },\n            err => console.error(err),\n            () => console.log('completed products stream'),\n        ) as any;\n    }\n\n    toggleEnabled = (id: string, enabled: boolean) => {\n        const mutation = `\n                mutation ToggleEnabled($id: ID!, $enabled: Boolean!) {\n                    updateProduct(input: { id: $id, enabled: $enabled }) {\n                        id\n                        enabled\n                    }\n                }\n                                `;\n        graphQlMutation(mutation, {id, enabled}).then(val => {\n            notify({\n                message: 'Updated Product',\n            });\n        });\n    }\n\n    componentWillUnmount(): void {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n\n    render() {\n        return <React.Fragment>\n            <button className=\"btn btn-primary\" onClick={this.getProducts}>Get products</button>\n            {\n                this.state.products.length ? <h3>Products</h3> : ''\n            }\n            <ol className=\"product-list\">\n                {this.state.products.map(product => <li key={product.id}>\n                    {product.name}\n                    {product.enabled ? <span className=\"label label-success\">Enabled</span> :\n                        <span className=\"label label-danger\">Disabled</span>}\n                    <button\n                        className=\"btn btn-sm btn-secondary\"\n                        onClick={() => this.toggleEnabled(product.id, !product.enabled)}\n                    >\n                        toggle\n                    </button>\n                </li>)}\n            </ol>\n        </React.Fragment>\n    }\n}\n","import React from 'react';\nimport '@vendure/admin-ui/static/theme.min.css';\nimport './App.css';\nimport { ProductList } from './ProductList';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <h1>Hello from React!</h1>\n            <p>This is a demonstration of how Admin UI extensions can be created using any web framework, and\n                interoperate\n                seamlessly with the Angular-based host application.</p>\n            <ProductList />\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}